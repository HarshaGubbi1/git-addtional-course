=======
GIT COURSE
=======


What is git?(vcs)
Version control is a software that tracks and manages changes to files over the time.
Git allows users to revisit the earlier version of the files,compare the changes between versions,undo the changes,collaborate and share changes…….

Git helps us ..
Track changes across multiple changes
Compare versions of the project
Time travel back to old versions
Revert to the previous versions
Collaborate and share changes 
Combine changes

Configure git globally
Git config --global user.name “harsha”
Git config --global user.email “harshagu.gubbi@gmail.com”

Git Repo
It is a workspace that tracks and manages files inside the folder.
Git Status
It gives the information  on the current status of the git repository and its contents.
Git status

Git Init
It is used to create a new git repo,before we do anything related to git, we must initialize the repo first. Git Init

Git Add
There are 3 stages on the project.Below are the 3 stages
Use git add to add the specific files to the staging area. Add multiple files at once with space in between.



Git commit
It will commit all staged changes.
Git commit -m “my commit message”
-m allow to pass an inline commit messages, rather than launching text editor.

.gitingore
Tell git which files and directories to ignore in a given repository
Create a .gitignore file to the root of the repo
.DS_Store will ignore file named .DS_Store
folderName/ will ignore full folder
*.log wil ignore all files that contains .log extension 

Git Branches
They enable us to create separate contexts where we can try new things, or even work on multiple ideas in parallel.
Changes on one branches wont impact the other branches unless we merge the changes
Default branch name is master
Many projects designate master branch as their  source of truth or official branches for their code base
Show all branches--git branch
Head-- it is just a pointer that refers to a current location (branch) our repo
Create branches-- git branch <branch name>, but head remains in old branch only. If you switch the branch then  head will change location.
Switch between branches--git switch <branch name>
Add all files and commit in single line--- git commit -a -m “message”
Create and switch in single command-- git switch -c <branch name>
Delete branch --git branch -d <branch name>. We cant delete if you are in same branch, switch the branch and delete.
If branch is not merged then it wont delete. To make forced delete use -D
Rename If we rename branch go the branch and remake using git branch -m <branch name>
Git branch -v gives more info about branches and last commits

  
Git merges
We have to co operate changes from one branch to another branch. We can do this using the git merge
We merge branches, not specific commits
We always merge to current head branch
Git switch master
Git merge bugfix-- here we are merging to master
When merge all the commits will also add to master branch
If no work is done on master is called fast forward merge






